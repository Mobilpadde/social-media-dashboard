import './Toggle.css.proxy.js';
/* src/components/Toggle.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	safe_not_equal,
	space
} from "../../web_modules/svelte/internal.js";

function create_fragment(ctx) {
	let label;
	let span;
	let t1;
	let input;
	let mounted;
	let dispose;

	return {
		c() {
			label = element("label");
			span = element("span");
			span.textContent = "Dark Mode";
			t1 = space();
			input = element("input");
			attr(input, "class", "toggle svelte-1fm7uqp");
			attr(input, "type", "checkbox");
			attr(label, "class", "mode svelte-1fm7uqp");
		},
		m(target, anchor) {
			insert(target, label, anchor);
			append(label, span);
			append(label, t1);
			append(label, input);
			input.checked = /*toggled*/ ctx[0];

			if (!mounted) {
				dispose = listen(input, "change", /*input_change_handler*/ ctx[1]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*toggled*/ 1) {
				input.checked = /*toggled*/ ctx[0];
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(label);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { toggled = true } = $$props;

	function input_change_handler() {
		toggled = this.checked;
		$$invalidate(0, toggled);
	}

	$$self.$$set = $$props => {
		if ("toggled" in $$props) $$invalidate(0, toggled = $$props.toggled);
	};

	return [toggled, input_change_handler];
}

class Toggle extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { toggled: 0 });
	}
}

export default Toggle;